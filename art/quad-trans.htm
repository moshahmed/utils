<!DOCTYPE html>
<html>
<head>
<title>quad-trans</title> 

<script>
  /*
  What: Image transform for projection by
  GPL(C) moshahmed_at_gmail
  Quadrilateral transform function by Ken Nilsen, CC3.0-Attr
  from https://stackoverflow.com/questions/36372692/image-manipulation-add-image-with-corners-in-exact-positions
  */

  var img;

  document.onreadystatechange = function () {
      if (document.readyState === "complete") {
          draw_image();
      }
  }

  function draw_image() {
    img = new Image(); 
    img.onload = quad_image_transform_four_corners;
    imgfile = document.getElementById('mylocalimage').value;
    if (!imgfile){
      imgfile = "https://i.imgur.com/EWoZkZm.jpg";
    }
    img.src = imgfile;
    quad_image_transform_four_corners();
  }

  function quad_image_transform_four_corners() {
    var me = this,
        c = document.querySelector("canvas"),
        ctx = c.getContext("2d"),
        corners = [
          {x: 100, y: 20},           // ul
          {x: 520, y: 20},           // ur
          {x: 520, y: 380},          // br
          {x: 100, y: 380}           // bl
        ],
        radius = 10, cPoint, timer,  // for mouse handling
        step = 4;                    // resolution

    update();

    // render image to quad using current settings
    function render() {
      
      var p1, p2, p3, p4, y1c, y2c, y1n, y2n,
          w = img.width - 1,         // -1 to give room for the "next" points
          h = img.height - 1;

      ctx.clearRect(0, 0, c.width, c.height);

      for(y = 0; y < h; y += step) {
        for(x = 0; x < w; x += step) {
          y1c = lerp(corners[0], corners[3],  y / h);
          y2c = lerp(corners[1], corners[2],  y / h);
          y1n = lerp(corners[0], corners[3], (y + step) / h);
          y2n = lerp(corners[1], corners[2], (y + step) / h);

          // corners of the new sub-divided cell p1 (ul) -> p2 (ur) -> p3 (br) -> p4 (bl)
          p1 = lerp(y1c, y2c,  x / w);
          p2 = lerp(y1c, y2c, (x + step) / w);
          p3 = lerp(y1n, y2n, (x + step) / w);
          p4 = lerp(y1n, y2n,  x / w);

          ctx.drawImage(img, x, y, step, step,  p1.x, p1.y, // get most coverage for w/h:
              Math.ceil(Math.max(step, Math.abs(p2.x - p1.x), Math.abs(p4.x - p3.x))) + 1,
              Math.ceil(Math.max(step, Math.abs(p1.y - p4.y), Math.abs(p2.y - p3.y))) + 1)
        }
      }
    }
    
    function lerp(p1, p2, t) {
      return {
        x: p1.x + (p2.x - p1.x) * t, 
        y: p1.y + (p2.y - p1.y) * t}
    }

    /* Stuff for demo: -----------------*/
    function drawCorners() {
      ctx.strokeStyle = "#09f"; 
      ctx.lineWidth = 2;
      ctx.beginPath();
      // border
      for(var i = 0, p; p = corners[i++];) ctx[i ? "lineTo" : "moveTo"](p.x, p.y);
      ctx.closePath();
      // circular handles
      for(i = 0; p = corners[i++];) {
        ctx.moveTo(p.x + radius, p.y); 
        ctx.arc(p.x, p.y, radius, 0, 6.28);
      }
      ctx.stroke()
    }
    
    function getXY(e) {
      var r = c.getBoundingClientRect();
      return {x: e.clientX - r.left, y: e.clientY - r.top}
    }
    
    function inCircle(p, pos) {
      var dx = pos.x - p.x,
          dy = pos.y - p.y;
      return dx*dx + dy*dy <= radius * radius
    }

    // handle mouse
    c.onmousedown = function(e) {
      var pos = getXY(e);
      for(var i = 0, p; p = corners[i++];) {if (inCircle(p, pos)) {cPoint = p; break}}
    }
    window.onmousemove = function(e) {
      if (cPoint) {
        var pos = getXY(e);
        cPoint.x = pos.x; cPoint.y = pos.y;
        cancelAnimationFrame(timer);
        timer = requestAnimationFrame(update.bind(me))
      }
    }
    window.onmouseup = function() {cPoint = null}
    

    function update() {render(); drawCorners()}
  }


</script>

<style>
body   {
  margin:20px;
  font:16px sans-serif;
  background-color: #424949;
  color: white;
}
canvas {
  border:1px solid #000;
  margin-top:10px;
  background-color: #17202A;
}
</style>

</head>
<body>  

<form name="image_picker" action="javascript:draw_image()">
  Image path:
    <input type="text" id="mylocalimage" name="mylocalimage"
      placeholder="c:/doc3/art/2021/belaku-surya/art-woman.jpg";
 >
  <input type="submit">
</form>

<canvas width=920 height=800>
</canvas>

</body>
</html>
